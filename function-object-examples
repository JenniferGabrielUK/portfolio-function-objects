// portfolio-function-objects.cpp : This file contains the 'main' function. Program execution begins and ends there.
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>

struct Square_Functor {
    void operator() (int x) {
        std::cout << x * x << " ";
    }
};

struct Square_Functor_1 {
    void operator() (double x) {
        std::cout << x * x << " " << std::endl;
    }
};

template <typename T>
struct Displayer {
    void operator() (const T& data) {
        std::cout << data << " ";
    }
};

int main()
{
    std::cout << "\nTest1==================" << std::endl;
    Square_Functor square1;
    Square_Functor_1 square2;
    square1(33);
    square2(3.3);
    Displayer<int> d1;
    Displayer<std::string> d2;
    d1(100);
    d2("Jenny")
    
    std::cout << "\nTest2===================" << std::endl;
    std::vector<int> vec1{ 1,2,3,4,5 };
    std::vector<std::string> vec2{ "Jenny", "Elizabeth", "Gabriel" };
    
    std::for_each(vec1.begin(), vec1.end(), square1);
    std::cout << std::endl;
    std::for_each(vec1.begin(), vec1.end(), Displayer<int>());
    std::cout << std::endl;
    std::for_each(vec1.begin(), vec1.end(), d1);
    std::cout << std::endl;
    std::for_each(vec2.begin(), vec2.end(), Displayer<std::string>());
    std::cout << std::endl;
    
    Displayer<double> d3;
    d3(3.33);
    std::vector<double> vec3{ 1.1,1.2,1.3,1.4,1.5 };
    std::for_each(vec3.begin(), vec3.end(), Displayer<double>());
    std::cout << std::endl;
    std::for_each(vec3.begin(), vec3.end(), d3);
    std::cout << std::endl;

    std::cout << "\nTest3=================" << std::endl;
    std::for_each(vec1.begin(), vec1.end(), [](int x) {std::cout << x * x << " "; });
    std::cout << std::endl;
    std::for_each(vec1.begin(), vec1.end(), [](int x) {std::cout << x * 10 << " "; });
    std::cout << std::endl;

    return 0;
}

